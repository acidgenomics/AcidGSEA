% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export-methods.R
\name{export}
\alias{export}
\alias{export,FGSEAList-method}
\title{Export}
\usage{
export(object, ...)

\S4method{export}{FGSEAList}(object, name = NULL, dir = ".", geneSetResults = FALSE)
}
\arguments{
\item{object}{Object.}

\item{name}{\code{character(1)}.
Name to use on disk. If \code{NULL}, will use the name of the object instead.}

\item{dir}{\code{character(1)}.
Directory path.}

\item{geneSetResults}{\code{logical(1)} or \code{character}.
Export per-gene set expression including log fold change values generated
from DESeq2. Can be slow when processing all MSigDB collections, so
disabled by default. Alternatively, can declare specific collections to
process, as a \code{character} vector, such as \code{"h"} for the hallmark
gene set collection.}

\item{...}{Additional arguments.}
}
\value{
Invisibily return file paths, either as \code{list} or \code{character}.
}
\description{
Export data out of R and write to disk.
}
\note{
Updated 2020-09-23.
}
\section{On-disk structure}{


Example: \code{fgsea/mutant_vs_control/c1.csv}

S4 object is currently structured by:
\enumerate{
\item Gene set (c1-c8, h).
\item Contrast.
}

The object was structured in this manner to flow with the R Markdown
template. However, when writing to disk, I think it makes more sense to
organize by:
\enumerate{
\item Contrast
\item Gene set.
}
}

\examples{
data(fgsea)

## FGSEAList ====
export(
    object = fgsea,
    dir = "example",
    geneSetResults = FALSE
)
sort(list.files(file.path("example", "fgsea")))
unlink("example", recursive = TRUE)
}
