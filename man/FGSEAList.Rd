% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/FGSEAList-methods.R
\name{FGSEAList}
\alias{FGSEAList}
\alias{FGSEAList,RankedList-method}
\title{Parameterized fast gene set enrichment analysis (GSEA)}
\usage{
FGSEAList(object, ...)

\S4method{FGSEAList}{RankedList}(
  object,
  gmtFiles,
  nPerm = 1000L,
  minSize = 15L,
  maxSize = 500L,
  alphaThreshold = 0.05,
  BPPARAM = BiocParallel::bpparam()
)
}
\arguments{
\item{object}{Object.}

\item{...}{Additional arguments.}

\item{gmtFiles}{\code{character}.
GMT file paths.}

\item{nPerm}{\code{integer(1)}.
Number of permutations.
Minimial possible nominal \emph{P} value is about 1/\code{nPerm}.}

\item{minSize}{\code{integer(1)}.
Minimal size of a gene set to test.
All pathways below the threshold are excluded.}

\item{maxSize}{\code{integer(1)}/\code{Inf}.
Maximal size of a gene set to test.
All pathways above the threshold are excluded.}

\item{alphaThreshold}{\code{numeric(1)}.
Alpha level cutoff.
Stored internally in \code{\link[=alphaThreshold]{alphaThreshold()}}.
Applied only to plots and enriched gene set exports, but does not affect
the actual GSEA enrichment calculation.}

\item{BPPARAM}{\code{bpparamClass}.
BiocParallel parameter to specify the desired processor configuration.\cr
We recommend using one of the following:
\itemize{
\item \link[BiocParallel:register]{bpparam}.
\item \link[BiocParallel:SerialParam-class]{SerialParam}.
\item \link[BiocParallel:MulticoreParam-class]{MulticoreParam}.
}}
}
\value{
\code{FGSEAList}.
}
\description{
Extends the functionality of \code{\link[fgsea:fgsea]{fgsea::fgsea()}}.
}
\note{
Updated 2020-08-05.
}
\examples{
## > ## Copy example MSigDb files to `$HOME`.
## > file.copy(
## >     from = system.file(
## >         "extdata", "msigdb",
## >         package = "acidgsea",
## >         mustWork = TRUE
## >     ),
## >     to = "~",
## >     overwrite = FALSE,
## >     recursive = TRUE
## > )

if (isTRUE(dir.exists(file.path("~", "msigdb")))) {
    data(fgsea)
    metadata <- S4Vectors::metadata

    rankedList <- metadata(fgsea)[["rankedList"]]
    gmtFiles <- metadata(fgsea)[["gmtFiles"]]

    fgsea <- FGSEAList(object = rankedList, gmtFiles = gmtFiles)
    print(fgsea)
}
}
